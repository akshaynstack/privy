version: "3.8"

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: privy
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Application
  web:
    build: .
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./:/app
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/privy
      DATABASE_URL_SYNC: postgresql+psycopg://postgres:postgres@db:5432/privy
      REDIS_URL: redis://redis:6379
      CELERY_BROKER: redis://redis:6379/0
      CELERY_BACKEND: redis://redis:6379/1
      ENVIRONMENT: development
      DEBUG: "true"
      SECRET_KEY: dev-secret-key-change-in-production
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  worker:
    build: .
    command: celery -A app.workers.celery_app.celery_app worker --loglevel=info --concurrency=2
    volumes:
      - ./:/app
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/privy
      DATABASE_URL_SYNC: postgresql+psycopg://postgres:postgres@db:5432/privy
      REDIS_URL: redis://redis:6379
      CELERY_BROKER: redis://redis:6379/0
      CELERY_BACKEND: redis://redis:6379/1
      ENVIRONMENT: development
      DEBUG: "true"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Celery Beat Scheduler
  beat:
    build: .
    command: celery -A app.workers.celery_app.celery_app beat --loglevel=info
    volumes:
      - ./:/app
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/privy
      DATABASE_URL_SYNC: postgresql+psycopg://postgres:postgres@db:5432/privy
      REDIS_URL: redis://redis:6379
      CELERY_BROKER: redis://redis:6379/0
      CELERY_BACKEND: redis://redis:6379/1
      ENVIRONMENT: development
      DEBUG: "true"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Database Migration Runner (optional)
  migrate:
    build: .
    command: alembic upgrade head
    volumes:
      - ./:/app
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/privy
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - migration

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: privy-network